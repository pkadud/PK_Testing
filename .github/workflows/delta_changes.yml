name: Capture Delta Changes

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Start date (YYYY-MM-DD)'
        required: true
      end_date:
        description: 'End date (YYYY-MM-DD)'
        required: true

jobs:
  capture_changes:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main

      # Step 2: Get list of modified files between start_date and end_date
      - name: Get modified files between start_date and end_date
        run: |
          START_DATE="${{ github.event.inputs.start_date }}"
          END_DATE="${{ github.event.inputs.end_date }}"

          # Fetch all commits and remove shallow history (if necessary)
          git fetch --prune --unshallow

          # Get list of modified files between the specified dates
          modified_files=$(git log --since="$START_DATE" --until="$END_DATE" --pretty=format: --name-only | sort | uniq)

          echo "Modified files between $START_DATE and $END_DATE (excluding specified folders):"
          echo "$modified_files"

          if [ -z "$modified_files" ]; then
            echo "No relevant files modified."
          fi

      # Step 3: Show commit details for each modified file and display changes made
      - name: Show commit details for modified files and display changes
        run: |
          START_DATE="${{ github.event.inputs.start_date }}"
          END_DATE="${{ github.event.inputs.end_date }}"

          modified_files=$(git log --since="$START_DATE" --until="$END_DATE" --pretty=format: --name-only | sort | uniq)

          if [ -z "$modified_files" ]; then
            echo "No files have been modified between $START_DATE and $END_DATE."
          else
            for file in $modified_files; do
              echo "Commit details and changes for $file between $START_DATE and $END_DATE:"
              git log --since="$START_DATE" --until="$END_DATE" --pretty=format:"%h - %an, %ad : %s" -p -- $file
              echo "-----------------------------------------------------------"
            done
          fi  
