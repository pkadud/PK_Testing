name: Capture Delta Changes

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Start date (YYYY-MM-DD)'
        required: true
      end_date:
        description: 'End date (YYYY-MM-DD)'
        required: true

jobs:
  capture_changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Get modified files between start_date and end_date
        run: |
          START_DATE="${{ github.event.inputs.start_date }}"
          END_DATE="${{ github.event.inputs.end_date }}"

          # Avoid running --unshallow if repository is already fully fetched
          if git rev-parse --is-shallow-repository &>/dev/null; then
            git fetch --prune --unshallow
          fi

          modified_files=$(git log --since="$START_DATE" --until="$END_DATE" --pretty=format: --name-only | sort | uniq)

          echo "Modified files between $START_DATE and $END_DATE:"
          echo "$modified_files"

          if [ -z "$modified_files" ]; then
            echo "No relevant files modified."
          fi

      - name: Show detailed file changes (added, modified, deleted)
        run: |
          START_DATE="${{ github.event.inputs.start_date }}"
          END_DATE="${{ github.event.inputs.end_date }}"

          echo "Checking changes between $START_DATE and $END_DATE..."

          # Avoid running --unshallow if repository is already fully fetched
          if git rev-parse --is-shallow-repository &>/dev/null; then
            git fetch --prune --unshallow
          fi

          commits=$(git log --since="$START_DATE" --until="$END_DATE" --pretty=format:"%H")

          if [ -z "$commits" ]; then
            echo "‚úÖ No commits found between $START_DATE and $END_DATE."
            exit 0
          fi

          echo "üîç Changes found in commits:"
          echo "$commits"
          echo "-----------------------------------------------------------"

          for commit in $commits; do
            echo "üîÅ Commit $commit"
            git show --name-status --oneline "$commit"

            echo "üîç Diff showing deletions (lines removed):"
            git show "$commit" --unified=0 | grep "^-" | grep -v "^---" || echo "No lines deleted in this commit."

            echo "-----------------------------------------------------------"
          done
